// * DEFAULT FONT

$font-family: "Commissioner";
$font-size: 18px;
$font-size-mobile: 16px;

// * GRID (MY DEFAULT GRID)

$max-width: 1920px;
$min-width: 360px;

$columns-count: 12;
$columns-count-xs: 2;
$grid-gap: 32px !default;
$grid-gap-side: calc($grid-gap / 2);

$container-max-widths: (
    xs: 336px,
    sm: 512px,
    md: 696px,
    lg: 936px,
    xl: 1072px,
    xxl: 1312px,
);

$grid-breakpoints: (
    // * 536
    xs: calc(map-get($container-max-widths, xs) + calc($grid-gap * 6.25)),

    // * 728
    sm: calc(map-get($container-max-widths, sm) + calc($grid-gap * 6.75)),

    // * 968
    md: calc(map-get($container-max-widths, md) + calc($grid-gap * 8.5)),

    // * 1120
    lg: calc(map-get($container-max-widths, lg) + calc($grid-gap * 5.75)),
    
    // * 1360
    xl: calc(map-get($container-max-widths, xl) + calc($grid-gap * 9)),
);

// * COLORS

$dark-color: #0d090a;
$light-color: #fffcff;
$footer-grey: #f5f5f5;
$dark-color-60: lighten($dark-color, 60%);
$dark-color-80: lighten($dark-color, 80%);

$accent-color: #1b998b;
$error-red: #cf5c36;
$active-blue-color: #0075c4;
$inactive-blue-color: #247ba0;

$dark-footer-grey: #141414;
$light-color-60: darken($light-color, 60%);
$light-color-80: darken($light-color, 80%);

$dark-accent-color: lighten(#1b998b, 16%);
$dark-error-red: lighten(#cf5c36, 16%);
$dark-active-blue-color: lighten(#0075c4, 12%);
$dark-inactive-blue-color: lighten(#247ba0, 12%);

// * EFFECTS
$transition: 0.4s all;
$inp-focus-shadow: 0 0 4px 2px rgba($active-blue-color, 0.32);
$dark-inp-focus-shadow: 0 0 4px 2px rgba($dark-active-blue-color, 0.32);
$inp-error-shadow: 0 0 4px 2px rgba($error-red, 0.32);
$dark-inp-error-shadow: 0 0 4px 2px rgba($dark-error-red, 0.32);

// * OTHER
$chevron-icon: "../../img/icons/chevron.svg";
$dark-chevron-icon: "../../img/icons/chevron-dark.svg";

// * NEW COLUMN VAR

// $col: (
//     xs: ceil( calc( ( map-get($container-max-widths, xs) / $columns-count-xs ) - $grid-gap-side) ),

//     sm: ceil( calc( ( map-get($container-max-widths, sm) / $columns-count-sm ) - ($grid-gap * 0.75) ) ),

//     md: ceil( calc( ( map-get($container-max-widths, md) / $columns-count ) - ($grid-gap * 0.75) ) ), 

//     lg: ceil( calc( ( map-get($container-max-widths, lg) / $columns-count ) - $grid-gap) ),

//     xl: ceil( calc( (map-get($container-max-widths, xl) / $columns-count ) - $grid-gap) ),

//     xxl: ceil( calc( (map-get($container-max-widths, xxl) / $columns-count ) - $grid-gap) ),
// );